#:import Clock kivy.clock.Clock
<EntryCards>:
    num:len(self.children)
    on_num:Clock.schedule_once(lambda x:self.children.sort(),0)

<PlayerCards>:
    on_children:
        num = len(self.children)
        center = 0.52 - num * 0.02
        for child in self.children:child.pos_hint = {'center_x':center+ 0.04*self.children.index(child),'y':0.01}
        self.canvas.clear()
        for child in self.children:self.canvas.add(child.canvas)

<LeftAICards>:
    on_children:
        for child in self.children:child.pos_hint={'center_x': 0.1, 'center_y': 0.7- 0.01*self.children.index(child)}
        self.canvas.clear()
        for child in self.children:self.canvas.add(child.canvas)


<RightAICards>:
    on_children:
        for child in self.children:child.pos_hint={'center_x': 0.9, 'center_y': 0.7-0.01*self.children.index(child)}
        self.canvas.clear()
        for child in self.children:self.canvas.add(child.canvas)

<PlayerHud1>:
    Image:
        id:_pass
        source:'./img/blue_button01.png'
        size_hint:0.15,0.2
        pos_hint:{'center_x': 0.3, 'center_y': 0.32}
    Image:
        id:stake_1
        source:'./img/stake_1.png'
        size_hint:0.15,0.2
        pos_hint:{'center_x': 0.45, 'center_y': 0.32}
        opacity: 1 if app.root.stake <1 else 0.5
    Image:
        id:stake_2
        source:'./img/stake_2.png'
        size_hint:0.15,0.2
        pos_hint:{'center_x': 0.58, 'center_y': 0.32}
        opacity: 1 if app.root.stake <2 else 0.5
    Image:
        id:stake_3
        source:'./img/stake_3.png'
        size_hint:0.15,0.2
        pos_hint:{'center_x': 0.7, 'center_y': 0.32}

<PlayerHud2>:
    Image:
        id:pass_
        source:'./img/blue_button01.png'
        size_hint:0.15,0.2
        pos_hint:{'center_x': 0.35, 'center_y': 0.35}
    Image:
        id:play_
        source:'./img/play_button.png'
        size_hint:0.15,0.2
        pos_hint:{'center_x': 0.65, 'center_y': 0.35}

<LandlordIcon>:
    Image:
        source:'./img/stake_{}.png'.format(app.root.stake)
        size_hint:0.1,0.1
        pos_hint:{'center_x': 0.15, 'center_y': 0.32}
        opacity: 1 if app.root.landlord == 'player' else 0
    Image:
        source:'./img/stake_{}.png'.format(app.root.stake)
        size_hint:0.1,0.1
        pos_hint:{'center_x': 0.1, 'center_y': 0.9}
        opacity: 1 if app.root.landlord == 'left_ai' else 0
    Image:
        source:'./img/stake_{}.png'.format(app.root.stake)
        size_hint:0.1,0.1
        pos_hint:{'center_x': 0.9, 'center_y': 0.9}
        opacity: 1 if app.root.landlord == 'right_ai' else 0

<PlayerTableCards>:
    size_hint:0.7,0.7
    pos_hint:{'center_x':0.5,'y':0.3}
    canvas:
        Color:
            rgba:1,1,0,1
        Rectangle:
            size:self.size
            pos:self.pos
    on_children:
        num = len(self.children)
        center = 0.5 + num * 0.02
        for child in self.children:child.pos_hint = {'center_x':center- 0.04*self.children.index(child),'y':0.01};print(child.pos_hint)






<Game>:
    player_cards:player_cards
    left_ai_cards:left_ai_cards
    right_ai_cards:right_ai_cards
    player_table_cards:player_table_cards
    canvas:
        Color:
            rgba:[x/255.0 for x in (63,124,182,255)]
        Rectangle:
            size:self.size
            pos:self.pos
    PlayerCards:
        id:player_cards
        size_hint:1.1,1.3
        pos_hint:{'center_x':0.5,'y':0}
    LeftAICards:
        id:left_ai_cards
    RightAICards:
        id:right_ai_cards
    PlayerTableCards:
        id:player_table_cards


